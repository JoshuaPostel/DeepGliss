name: build-cross-platform

env:
  CARGO_TERM_COLOR: always

on:
  workflow_dispatch:
    inputs:
      tags:
        description: 'hello world'

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: create release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: actions/create-release@v1
        with:
          tag_name: 0.1.1
          draft: false
          prerelease: false

  build:
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target-name: libgliss 
            target-extension: so
          - os: windows-latest
            target-name: gliss 
            target-extension: dll
#          - os: macos-latest
#            target-extension: so
    
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      # run ablation tests to see how much of this is nessisary
      - name: install baseview dependencies (ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install libgl-dev libx11-xcb-dev libxcb1-dev libxcb-dri2-0-dev libxcb-icccm4-dev libxcursor-dev libxkbcommon-dev libxcb-shape0-dev libxcb-xfixes0-dev

      - name: install rust nightly 
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: build
        id: build
        env:
          CARGO_TARGET_DIR: target-${{ matrix.os }}
        run: cargo +nightly build --release


      - name: upload release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: target-${{ matrix.os }}/release/${{ matrix.target-name}}.${{ matrix.target-extension }}
          asset_name: DeepGliss.${{ matrix.target-extension }}
          asset_content_type:  application/octet-stream
